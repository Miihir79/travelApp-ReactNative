{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Mihir Shah\\\\travelApp\\\\navigation\\\\tabs.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { createBottomTabNavigator, BottomTabBar } from \"@react-navigation/bottom-tabs\";\nimport { Dashboard } from \"../screens\";\nimport { COLORS, FONTS, icons } from \"../constants\";\nvar Tab = createBottomTabNavigator();\n\nvar Tabs = function Tabs() {\n  return React.createElement(Tab.Navigator, {\n    tabBarOptions: {\n      showLabel: false,\n      style: {\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        elevation: 0,\n        backgroundColor: COLORS.black,\n        borderTopColor: \"transparent\",\n        height: 100\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Dashboard\",\n    component: Dashboard,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref) {\n        var focused = _ref.focused;\n        return React.createElement(View, {\n          style: {\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }\n        }, React.createElement(Image, {\n          source: icons.maps,\n          resizeMode: \"contain\",\n          style: {\n            width: 30,\n            height: 30,\n            tintColor: focused ? COLORS.blue : COLORS.gray\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }\n        }));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Bookmark\",\n    component: Dashboard,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var focused = _ref2.focused;\n        return React.createElement(View, {\n          style: {\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }\n        }, React.createElement(Image, {\n          source: icons.bookmark,\n          resizeMode: \"contain\",\n          style: {\n            width: 30,\n            height: 30,\n            tintColor: focused ? COLORS.blue : COLORS.gray\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }\n        }));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Calendar\",\n    component: Dashboard,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var focused = _ref3.focused;\n        return React.createElement(View, {\n          style: {\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }\n        }, React.createElement(Image, {\n          source: icons.calendar,\n          resizeMode: \"contain\",\n          style: {\n            width: 30,\n            height: 30,\n            tintColor: focused ? COLORS.blue : COLORS.gray\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }\n        }));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Plane\",\n    component: Dashboard,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var focused = _ref4.focused;\n        return React.createElement(View, {\n          style: {\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }\n        }, React.createElement(Image, {\n          source: icons.plane,\n          resizeMode: \"contain\",\n          style: {\n            width: 30,\n            height: 30,\n            tintColor: focused ? COLORS.blue : COLORS.gray\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }\n        }));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  shadow: {\n    shadowColor: COLORS.blue,\n    shadowOffset: {\n      width: 0,\n      height: 10\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  }\n});\nexport default Tabs;","map":{"version":3,"sources":["C:/Users/Mihir Shah/travelApp/navigation/tabs.js"],"names":["React","createBottomTabNavigator","BottomTabBar","Dashboard","COLORS","FONTS","icons","Tab","Tabs","showLabel","style","position","bottom","left","right","elevation","backgroundColor","black","borderTopColor","height","tabBarIcon","focused","alignItems","justifyContent","maps","width","tintColor","blue","gray","bookmark","calendar","plane","styles","StyleSheet","create","shadow","shadowColor","shadowOffset","shadowOpacity","shadowRadius"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    View,\n    Image,\n    TouchableOpacity,\n    Text,\n    StyleSheet\n} from \"react-native\";\nimport { createBottomTabNavigator, BottomTabBar } from \"@react-navigation/bottom-tabs\"\n\nimport { Dashboard } from \"../screens\"\nimport { COLORS, FONTS, icons } from \"../constants\"\n\nconst Tab = createBottomTabNavigator()\n\nconst Tabs = () => {\n    return (\n        <Tab.Navigator\n            tabBarOptions={{\n                showLabel: false,\n                style: {\n                    position: 'absolute',\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    elevation: 0,\n                    backgroundColor: COLORS.black,\n                    borderTopColor: \"transparent\",\n                    height: 100\n                }\n            }}\n        >\n            <Tab.Screen\n                name=\"Dashboard\"\n                component={Dashboard}\n                options={{\n                    tabBarIcon: ({ focused }) => (\n                        <View\n                            style={{\n                                alignItems: 'center',\n                                justifyContent: 'center',\n                            }}\n                        >\n                            <Image\n                                source={icons.maps}\n                                resizeMode=\"contain\"\n                                style={{\n                                    width: 30,\n                                    height: 30,\n                                    tintColor: focused ? COLORS.blue : COLORS.gray\n                                }}\n                            />\n                        </View>\n                    )\n                }}\n            />\n            <Tab.Screen\n                name=\"Bookmark\"\n                component={Dashboard}\n                options={{\n                    tabBarIcon: ({ focused }) => (\n                        <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n                            <Image\n                                source={icons.bookmark}\n                                resizeMode=\"contain\"\n                                style={{\n                                    width: 30,\n                                    height: 30,\n                                    tintColor: focused ? COLORS.blue : COLORS.gray\n                                }}\n                            />\n                        </View>\n                    )\n                }}\n            />\n            <Tab.Screen\n                name=\"Calendar\"\n                component={Dashboard}\n                options={{\n                    tabBarIcon: ({ focused }) => (\n                        <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n                            <Image\n                                source={icons.calendar}\n                                resizeMode=\"contain\"\n                                style={{\n                                    width: 30,\n                                    height: 30,\n                                    tintColor: focused ? COLORS.blue : COLORS.gray\n                                }}\n                            />\n                        </View>\n                    )\n                }}\n            />\n            <Tab.Screen\n                name=\"Plane\"\n                component={Dashboard}\n                options={{\n                    tabBarIcon: ({ focused }) => (\n                        <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n                            <Image\n                                source={icons.plane}\n                                resizeMode=\"contain\"\n                                style={{\n                                    width: 30,\n                                    height: 30,\n                                    tintColor: focused ? COLORS.blue : COLORS.gray\n                                }}\n                            />\n                        </View>\n                    )\n                }}\n            />\n        </Tab.Navigator>\n    )\n}\n\nconst styles = StyleSheet.create({\n    shadow: {\n        shadowColor: COLORS.blue,\n        shadowOffset: {\n            width: 0,\n            height: 10,\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n\n        elevation: 5\n    }\n})\n\nexport default Tabs;"]},"metadata":{},"sourceType":"module"}